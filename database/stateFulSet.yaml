apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql # has to match .spec.template.metadata.labels
  serviceName: "mysql-db-svc"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: mysql # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: mysql
        image: 856019860811.dkr.ecr.us-east-1.amazonaws.com/database:1.0
        ports:
        - containerPort: 3306
          name: "db3306"
        resources:
          requests:
            memory: "700Mi"
            cpu: "40m"
          limits:
            memory: "950Mi"
            cpu: "50m"

        env:
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: MYSQL_DATABASE
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: MYSQL_PASSWORD
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: MYSQL_USER
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: MYSQL_ROOT_PASSWORD

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-db-svc
  labels:
    app: mysql
spec:
  ports:
  - port: 3306
    name: "db3306"
  clusterIP: None
  selector:
    app: mysql


  #       volumeMounts:
  #       - name: www
  #         mountPath: /usr/share/nginx/html
  # volumeClaimTemplates:
  # - metadata:
  #     name: www
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     storageClassName: "my-storage-class"
  #     resources:
  #       requests:
  #         storage: 1Gi